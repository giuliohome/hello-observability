apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: grafana
    spec:
      containers:
        - env:
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: Admin
            - name: GF_AUTH_DISABLE_LOGIN_FORM
              value: "true"
            - name: GF_USERS_DEFAULT_THEME
              value: light
          image: grafana/grafana:8.4.3
          name: grafana
          ports:
            - containerPort: 3000
          resources: 
            limits:
              cpu: '200m'
              memory: '200Mi'
            requests:
              cpu: '100m'
              memory: '100Mi'
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              name: grafana-datasources-yaml-config-volume
              subPath: grafana-datasources.yaml
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-claim1
      restartPolicy: Always
      volumes:
        - name: grafana-datasources-yaml-config-volume
          configMap:
            name: grafana-datasources-yaml
        - name: grafana-claim1
          persistentVolumeClaim:
            claimName: grafana-claim1
status: {}
